
public class SuDoku {

	private int s[][];
	private int a[];
	public SuDoku(int size) {

		int t[][] =	{{3, 0, 6, 5, 0, 8, 4, 0, 0},
                {5, 2, 0, 0, 0, 0, 0, 0, 0},
                {0, 8, 7, 0, 0, 0, 0, 3, 1},
                {0, 0, 3, 0, 1, 0, 0, 8, 0},
                {9, 0, 0, 8, 6, 3, 0, 0, 5},
                {0, 5, 0, 0, 9, 0, 6, 0, 0},
                {1, 3, 0, 0, 0, 0, 2, 5, 0},
                {0, 0, 0, 0, 0, 0, 0, 7, 4},
                {0, 0, 5, 2, 0, 6, 3, 0, 0}};
		
		s= new int[size][size];
		s=t;
		
		int b[]= {1,2,3,4,5,6,7,8,9};
		a=b;
		
		
	}
	
	
	public boolean safe(int x, int y, int num){
		
		
		for (int i = 0; i < s.length; i++) {
			// used in row
			
			if (s[i][y]==num) {
				return false;
			}
			// used in column
			else if (s[x][i]==num) {
				return false;
			}
		}
		// used in the same box
		int row = x-x%3;
		int col = y-y%3;
		
		for (int i = row; i < row+3; i++) {
			for (int j = col; j < col+3; j++) {
				if (s[i][j]==num) {
					return false;
				}
			}
		}
		return true;
	}

	
	public void print(){
		for (int i = 0; i < s.length; i++) {
			System.out.print("[");
			for (int j = 0; j < s.length; j++) {
				System.out.print(s[i][j]+" ");
			}
			System.out.println("]");
		}
	}
	public boolean solution(){
		
		int row=0; int column=0;
		int flag=0;
		int i; int j;
		for (  i = 0; i < s.length; i++) {
			for ( j = 0; j < s.length; j++) {
				if (s[i][j]==0) {		
					row=i;
					column=j;
					flag=1;
					break;
				}
			}
			if (i==s.length-1 && j ==s.length) {
				return true;
			}
			if (flag==1) {
				flag=0;
				break;
			}
		}
		for (int numb = 1; numb <= 9; numb++) {
			if(safe(row,column,numb)){
				s[row][column] = numb;
				if (solution()) {
					return true;
				}
				else {
					s[row][column]=0;
				}
			}
			}
		return false;
	}
	
	public static void main(String[] args) {
		SuDoku sdf = new SuDoku(9);
		System.out.println(sdf.solution());
		sdf.print();
	}
	
}
